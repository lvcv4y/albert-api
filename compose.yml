services:
  postgres:
    image: postgres:16.5
    restart: always
    user: postgres
    environment:
      - CREATE_DB=api,playground
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=changeme
      - POSTGRES_DB=postgres
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./scripts/postgres_entrypoint.sh:/docker-entrypoint-initdb.d/postgres_entrypoint.sh
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-U", "postgres" ]
      interval: 4s
      timeout: 10s
      retries: 5
      start_period: 60s
  redis:
    image: redis/redis-stack-server:7.2.0-v11
    restart: always
    environment:
      REDIS_ARGS: --dir /data --requirepass changeme --user username on >password ~* allcommands --save 60 1 --appendonly yes
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 4s
      timeout: 10s
      retries: 5

  # ---------------------------------------------------------------------
  # Vector store
  # ---------------------------------------------------------------------

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:9.0.2
    restart: always
    ports:
      - 9200:9200
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - ELASTIC_USERNAME=elastic
      - ELASTIC_PASSWORD=changeme
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data
    healthcheck:
      test: [ "CMD-SHELL", "bash", "-c", ":> /dev/tcp/127.0.0.1/9200" ]
      interval: 4s
      timeout: 10s
      retries: 5


#  qdrant:
#    image: qdrant/qdrant:v1.11.5-unprivileged
#    restart: always
#    environment:
#      - QDRANT__SERVICE__API_KEY=changeme
#    volumes:
#      - qdrant:/qdrant/storage
#    ports:
#      - "${QDRANT_PORT_HTTP}:6333"
#      - "${QDRANT_PORT_GRPC}:6334"
#    healthcheck:
#      test: [ "CMD-SHELL", "bash", "-c", ":> /dev/tcp/127.0.0.1/6333" ]
#      interval: 4s
#      timeout: 10s
#      retries: 5



  mcp-bridge:
    image: ghcr.io/etalab-ia/albert-api-mcp-bridge/albert-api-mcp-bridge:latest
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: always
    ports:
      - "${MCP_BRIDGE_PORT}:8000"
    environment:
      - MCP_BRIDGE__CONFIG__FILE=config.json
    volumes:
      - ./mcp/config.json:/mcp_bridge/config.json

volumes:
  postgres:
  redis:
  elasticsearch:
  # qdrant:
